= polymorphic_identity

+polymorphic_identity+ dynamically generates aliases for polymorphic associations
based on the class names of those associations.

== Resources

API

* http://api.pluginaweek.org/polymorphic_identity

Bugs

* http://pluginaweek.lighthouseapp.com/projects/13285-polymorphic_identity

Development

* http://github.com/pluginaweek/polymorphic_identity

Source

* git://github.com/pluginaweek/polymorphic_identity.git

== Description

Polymorphic associations are not very descriptive when it comes to easily
knowing the type of model your interacting with.  For example, a typical
polymorphic assocation looks like the following:

  class Tag < ActiveRecord::Base
    belongs_to :taggable, :polymorphic => true
  end

When getting the taggable record, you would normally have to call
<tt>tag.taggable</tt>.  However, if you know that the taggable record is just an
instance of the Article model, then it would feel more comfortable if you could
just call <tt>tag.article</tt>.  polymoprhic_identity makes this possible by
dynamically checking the name of the polymorphic record's class and creating
methods that allow you to access the polymorphic association based on that
class name.

== Usage

=== Example

  class Comment < ActiveRecord::Base
    belongs_to :commentable, :polymorphic => true
    belongs_to :commenter, :polymorphic => true
  end
  
  class Article < ActiveRecord::Base
    has_many :comments, :as => :commentable
  end
  
  class User < ActiveRecord::Base
    has_many :comments, :as => :commenter
  end
  
  c = Comment.find(1)   # => #<Tag id: 1, commentable_id: 1, commentable_type: "Article", commenter_id: 1, commenter_type: "User"}>
  c.commentable         # => #<Article id: 1>
  c.article             # => #<Article id: 1>
  c.commenter           # => #<User id: 1>
  c.user                # => #<User id: 1>

== Testing

Before you can run any tests, the following gem must be installed:
* plugin_test_helper[http://github.com/pluginaweek/plugin_test_helper]

To run against a specific version of Rails:

  rake test RAILS_FRAMEWORK_ROOT=/path/to/rails

== Dependencies

* Rails 2.0 or later
